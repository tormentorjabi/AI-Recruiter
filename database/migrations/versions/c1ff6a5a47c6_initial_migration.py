"""Initial migration

Revision ID: c1ff6a5a47c6
Revises: 
Create Date: 2025-04-01 14:00:47.473729

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c1ff6a5a47c6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bot_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('expected_format', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('citizenship', sa.String(length=100), nullable=True),
    sa.Column('relocation_ready', sa.Boolean(), nullable=True),
    sa.Column('telegram_id', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), server_default='pending', nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employment_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('skill_name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('work_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('schedule', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('analysis_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('summary', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('source', sa.String(length=20), nullable=True),
    sa.Column('final_decision', sa.String(length=20), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('vacancy_id', sa.String(length=50), nullable=True),
    sa.Column('application_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bot_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('chat_id', sa.Integer(), nullable=True),
    sa.Column('current_state', sa.String(length=50), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['bot_questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidate_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('answer_text', sa.Text(), nullable=True),
    sa.Column('gigachat_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['bot_questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hr_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('channel', sa.String(length=20), server_default='telegram', nullable=True),
    sa.Column('sent_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), server_default='sent', nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resumes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=True),
    sa.Column('parsed_text', sa.Text(), nullable=True),
    sa.Column('gigachat_response', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('analysis_status', sa.String(length=20), server_default='pending', nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidate_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resume_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('proficiency', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('desired_positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resume_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.String(length=255), nullable=True),
    sa.Column('salary', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('educations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resume_id', sa.Integer(), nullable=True),
    sa.Column('institution', sa.String(length=255), nullable=True),
    sa.Column('degree', sa.String(length=100), nullable=True),
    sa.Column('field', sa.String(length=255), nullable=True),
    sa.Column('graduation_year', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('work_experiences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resume_id', sa.Integer(), nullable=True),
    sa.Column('company', sa.String(length=255), nullable=True),
    sa.Column('position', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['resume_id'], ['resumes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('desired_position_employment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employment_type_id', sa.Integer(), nullable=True),
    sa.Column('desired_position_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['desired_position_id'], ['desired_positions.id'], ),
    sa.ForeignKeyConstraint(['employment_type_id'], ['employment_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('desired_position_schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('desired_position_id', sa.Integer(), nullable=True),
    sa.Column('schedule_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['desired_position_id'], ['desired_positions.id'], ),
    sa.ForeignKeyConstraint(['schedule_id'], ['work_schedules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('desired_position_schedule')
    op.drop_table('desired_position_employment')
    op.drop_table('work_experiences')
    op.drop_table('educations')
    op.drop_table('desired_positions')
    op.drop_table('candidate_skills')
    op.drop_table('resumes')
    op.drop_table('hr_notifications')
    op.drop_table('candidate_answers')
    op.drop_table('bot_interactions')
    op.drop_table('applications')
    op.drop_table('analysis_results')
    op.drop_table('work_schedules')
    op.drop_table('skills')
    op.drop_table('employment_types')
    op.drop_table('candidates')
    op.drop_table('bot_questions')
    # ### end Alembic commands ###
