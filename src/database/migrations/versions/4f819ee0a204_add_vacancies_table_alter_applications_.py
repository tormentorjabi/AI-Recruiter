"""Add Vacancies table & alter Applications table

Revision ID: 4f819ee0a204
Revises: 5065704ab96e
Create Date: 2025-04-14 16:08:32.140735

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4f819ee0a204'
down_revision: Union[str, None] = '5065704ab96e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('vacancies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.execute('ALTER TABLE applications ALTER COLUMN vacancy_id TYPE INTEGER USING vacancy_id::integer')
    op.add_column('analysis_results', sa.Column('application_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'analysis_results', 'applications', ['application_id'], ['id'])
    op.add_column('applications', sa.Column('status', sa.String(length=20), nullable=True))
    op.alter_column('applications', 'vacancy_id',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Integer(),
               existing_nullable=True)
    op.create_foreign_key(None, 'applications', 'vacancies', ['vacancy_id'], ['id'])
    op.add_column('bot_questions', sa.Column('vacancy_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'bot_questions', 'vacancies', ['vacancy_id'], ['id'])
    op.add_column('candidate_answers', sa.Column('application_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'candidate_answers', 'applications', ['application_id'], ['id'])
    op.add_column('resumes', sa.Column('application_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'resumes', 'applications', ['application_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'resumes', type_='foreignkey')
    op.drop_column('resumes', 'application_id')
    op.drop_constraint(None, 'candidate_answers', type_='foreignkey')
    op.drop_column('candidate_answers', 'application_id')
    op.drop_constraint(None, 'bot_questions', type_='foreignkey')
    op.drop_column('bot_questions', 'vacancy_id')
    op.drop_constraint(None, 'applications', type_='foreignkey')
    op.alter_column('applications', 'vacancy_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.drop_column('applications', 'status')
    op.drop_constraint(None, 'analysis_results', type_='foreignkey')
    op.drop_column('analysis_results', 'application_id')
    op.drop_table('vacancies')
    # ### end Alembic commands ###
