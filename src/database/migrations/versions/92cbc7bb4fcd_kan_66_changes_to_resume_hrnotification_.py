"""KAN-66: Changes to Resume, HrNotification & AnalysisResult models. Field types changes

Revision ID: 92cbc7bb4fcd
Revises: a300031d0d44
Create Date: 2025-05-01 15:40:41.773616

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '92cbc7bb4fcd'
down_revision: Union[str, None] = 'a300031d0d44'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('analysis_results', sa.Column('gigachat_score', sa.Integer(), nullable=True))
    op.drop_column('analysis_results', 'source')
    op.drop_column('analysis_results', 'summary')
    op.alter_column('hr_notifications', 'analysis_score',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               existing_nullable=True)
    op.add_column('resumes', sa.Column('gigachat_score', sa.Integer(), nullable=True))
    op.drop_column('resumes', 'gigachat_response')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('resumes', sa.Column('gigachat_response', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('resumes', 'gigachat_score')
    op.alter_column('hr_notifications', 'analysis_score',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    op.add_column('analysis_results', sa.Column('summary', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('analysis_results', sa.Column('source', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
    op.drop_column('analysis_results', 'gigachat_score')
    # ### end Alembic commands ###
